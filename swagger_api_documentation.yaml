
swagger: '2.0'
info:
  title: bpanz_spellchecker
  description: Spellchecker service; PHP 5.3.3 compatible and made to piggy-back on the current 2015 www.bpanz.com website.
  version: "0.1.0"
# the domain of the service
host: www.bpanz.com
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
basePath: /sc/public/api/v1
produces:
  - application/json
paths:
  /preflight_handshake:
    get:
      summary: Preflight handshake for authorising clients with the spell checker.
      description: |
        This endpoint must be the first request made to by any client wishing to interface with the spell checker. The preflight handshake request from the client must first satisfy two conditions&colon; a valid apikey must be passed and the request be made from a valid referral URL.
      parameters:
        - name: apikey
          in: header
          description: A valid API key.
          required: true
          type: string
          format: string
      tags:
        - spellchecker
      responses:
        200:
          description: Returns a JSON object containing a session-based CSRF (cross-site request forgery) key in the 'data' property. 
          schema:
            $ref: '#/definitions/preflight_request_success'
        401:
          description: Returns a results object containing three properties - **data**, **success**, **message**.
          schema:
            $ref: '#/definitions/results_object'
  /spellcheck/identify_mispellt_words:
    post:
      summary: Check a string of text and return all the words that are misspelt.
      description: | 
        This endpoint can be used to check which words in a string of text are misspelt. Pass the string of text to be checked in the a parameter named 'text' in the body of the request (form-data). This will return an array of words that were in 'text' that are not spelt correctly. 
        
        NOTE&colon; The response array will **not** contain duplicates.
      parameters:
        - name: text
          in: formData
          description: The text to check. Max size of 16384 chars.
          required: true
          type: string
          format: string
      tags:
        - spellchecker
      responses:
        200:
          description: Returns a results object containing three properties - **data**, **success**, **message**. The '**data**' property should contain the array of words identified in the text that are misspelt.
          schema:
            $ref: '#/definitions/results_object'
  /spellcheck/:
    get:
      summary: Does nothing except returns a link to the documentation for the API.
      description: This default endpoint doesn't do anything meaningful yet; currently points you to the API documentation.
      tags:
        - spellchecker
      responses:
        200:
          description: A message and link to the API documentation.
          schema:
            type: object
            properties:
              data:
                type: string
                description: A link to the api documentation
              message:
                type: string
                description: A message saying&colon; "Please view the documentation on how to use this API. Link should be in 'data'".
    post:
      summary: Spellcheck an entire string
      description: Similar to the **'identify_mispellt_words'** route, this endpoint can be used to check which words in a string of text are misspelt but it will also simultaneously provide some suggestions for each misspelt word. Pass the string of text to be checked in the parameter named 'text' in the body of the request (form-data). This will return an array of arrays&colon; each sub-array contains each word in 'text' that was misspelt, plus it's suggested corrections.
      parameters:
        - name: text
          in: formData
          type: string
          format: string
          description: The text to spellcheck.
      tags:
        - spellchecker
      responses:
        200:
          description: History information for the given user
          schema:
            $ref: '#/definitions/results_object_spellcheck_text'
  /spellcheck/{word}:
    get:
      summary: Spell check a single word
      parameters:
        - name: word
          in: path
          description: The word to check
          required: true
          type: string
          format: string
      description: Spellchecks a single word; if the word is not known (i.e. not in the dictionary), then **data** on the response property will include an array of suggested corrections. If the word is known, then **success** will be false.
      tags:
        - User
      responses:
        200:
          description: A link to the API documentation.
          schema:
            $ref: '#/definitions/results_object'
definitions:
  preflight_request_success:
    type: object
    properties:
      data:
        type: string
        description: A 40 character long string of random alphanumeric characters.
      success:
        type: boolean
        description: A boolean indicating the request status (false is bad, true is good)
  results_object:
    type: object
    properties:
      data:
        type: string
        description: Data sent in repsonse to the request. If successful the data usually is an array, even if it returns a single object or record.
      success:
        type: boolean
        description: A boolean indicating the status of the request (false for failed or incorrect request, or true for successful request).
      message:
        type: string
        description: An English written message indicating what went wrong or specifying the type of error that occured.
  results_object_spellcheck_text:
    type: object
    properties:
      data:
        type: object
        description: Data should contain four properties, each one representing a part of the spellcheck operation&colon; known, unknown, unknown_candidates, unknown_no_candidates
        properties:
          known: 
            description: All the words present in 'text' that were in the dictionary.
          unknown:
            description: All words not present in the dictionary.
          unknown_candidates:
            description: All unknown words, with their respective suggestions.
          unknown_no_candidates:
            items:
              $ref: '#/definitions/word'
            type: array
            description: All unknown words that had no suggestions.
      success:
        type: boolean
        description: A boolean indicating the status of the request (false for failed or incorrect request, or true for successful request).
      message:
        type: string
        description: An English written message indicating what went wrong or specifying the type of error that occured.
  word:
    type: string
    description: A word